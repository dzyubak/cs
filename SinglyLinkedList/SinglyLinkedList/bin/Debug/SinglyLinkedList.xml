<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SinglyLinkedList</name>
    </assembly>
    <members>
        <member name="T:SinglyLinkedList.Element">
            <summary>
            This class describes an element of a Singly linked list
            </summary>
            <remarks>
            <c>int data;</c> can be used instead of automatic properties
            <c>Element next;</c> can be used instead of automatic properties
            </remarks>
        </member>
        <member name="P:SinglyLinkedList.Element.Data">
            <remarks>
            automatic properties (C# 3.0)
            </remarks>
        </member>
        <member name="P:SinglyLinkedList.Element.Next">
            <remarks>
            automatic properties (C# 3.0)
            </remarks>
        </member>
        <member name="T:SinglyLinkedList.List">
            <summary>
            This class describes a Singly linked list
            </summary>
        </member>
        <member name="M:SinglyLinkedList.List.insertFirst(System.Int32)">
            <summary>
            insert the first element, if the list is empty
            </summary>
            <remark>
            can also be: <c>return first = new Element(data, first);</c>
            </remark>
        </member>
        <member name="M:SinglyLinkedList.List.removeAllByValue(System.Int32)">
            <summary>
            returns number of removed elements
            </summary>
        </member>
        <member name="M:SinglyLinkedList.List.removeAllByValueRecursive(System.Int32,SinglyLinkedList.Element,System.Int32,System.Boolean)">
            <summary>
            returns number of removed elements
            </summary>
        </member>
        <member name="M:SinglyLinkedList.List.removeAllNegative">
            <summary>
            returns number of negative elements that have been removed
            </summary>
        </member>
        <member name="M:SinglyLinkedList.List.getElementByReference(SinglyLinkedList.Element)">
            <summary>
            get Element Value by reference
            </summary>
        </member>
        <member name="M:SinglyLinkedList.List.getIndexByReference(SinglyLinkedList.Element)">
            <summary>
            get Element Index by reference
            </summary>
        </member>
        <member name="M:SinglyLinkedList.List.listToStringReverseRecursiveColumn(System.String,SinglyLinkedList.Element,System.Boolean)">
            <summary>
            method returns "reverse order"
            </summary>
        </member>
        <member name="M:SinglyLinkedList.List.listToStringNaturalReverseRecursive(System.String,System.String,SinglyLinkedList.Element,System.Boolean)">
            <summary>
            method returns "natural order" + "\r\n" + "reverse order"
            </summary>
            <remarks>
            "Stack Overflow Exception" can be created easily, if "flag" won't be set
            to "true" or if "flag" won't be passed as a parameter in the recursive call.
            </remarks>
        </member>
        <member name="T:SinglyLinkedList.ListException">
            <summary>
            This class describes a Singly linked list exception handling
            </summary>
        </member>
    </members>
</doc>
